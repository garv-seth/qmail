Build a Progressive Web App called "QMail" that provides privacy-first email filtering and cleanup. QMail must include the following features and technologies:

Features:
1. Scam Detection & Email Filtering:
   - Use OpenAI integration to analyze incoming emails and detect scams/phishing attempts.
   - Alert users in real time with detailed scam warnings and history.
2. Privacy-Centric SSO:
   - Leverage Replit’s built-in authentication to support single sign-on (SSO) for multiple email providers (e.g., Gmail, Outlook).
   - Ensure minimal data access and enforce strict privacy controls.
3. Encrypted Email Output:
   - Implement encryption for outgoing emails using modern cryptographic libraries.
   - Use quantum-enhanced random number generation (via Azure Quantum) for stronger key entropy.
4. AI-Powered Unsubscription:
   - Develop AI agents that automatically analyze subscription emails and generate unsubscribe requests according to user-defined preferences.
5. Advanced Message Filtering & Control:
   - Allow users to create custom filtering rules and manage their inbox, with both manual and AI-assisted controls.
   - Provide a dynamic dashboard displaying email metrics, filtering status, and privacy alerts.

Azure Quantum Integration:
1. Quantum Randomness for Encryption:
   - Integrate Azure Quantum’s capabilities to generate quantum random numbers for seeding encryption keys, ensuring high entropy and security.
   - Even in the current NISQ era, use quantum-inspired randomness to bolster classical encryption.
2. Quantum-Inspired Optimization:
   - Utilize Azure Quantum’s optimization tools to dynamically fine-tune AI filtering parameters, improving the detection of scam emails and optimizing unsubscribe workflows.
   - Call Azure Quantum APIs to simulate and analyze privacy protocols, ensuring quantum resilience.

Design & UI Guidelines:
- **Aesthetic:** Create an elegant, professional interface inspired by Apple design principles.
- **Typography:** Use SF Pro (or a similar refined, sans-serif) font.
- **UI Elements:** Implement smooth, rounded edges on buttons, cards, and input fields; use subtle shadows and ample white space.
- **Layout:** Ensure a responsive design that looks fantastic on both desktop and mobile.
- **Animations:** Include subtle animations and transitions for an overall classy user experience.

Technical Requirements:
- **Backend:** Develop RESTful API endpoints using Node.js (Express) or Python (Flask/FastAPI) for handling authentication, email analysis, encryption, and AI unsubscription.
- **Frontend:** Build a modern PWA using React or Vue.js to provide the dashboard and user interfaces.
- **Database:** Use Replit’s built‑in database to store user settings, email data, and analysis logs.
- **Authentication:** Integrate Replit’s built-in OAuth for multi-provider SSO.
- **AI Integration:** Connect to OpenAI APIs to analyze email content, trigger scam alerts, and automate unsubscribe actions.
- **Azure Quantum Integration:** 
   - Incorporate calls to Azure Quantum’s API to generate quantum random bits. Use these bits to seed encryption routines, enhancing privacy.
   - Implement quantum-inspired optimization for refining email filtering rules based on user behavior and system feedback.

Project Scaffolding & Documentation:
1. Initialize a GitHub repository from Replit with clear module boundaries (authentication, email processing, AI integration, encryption, Azure Quantum).
2. Commit code regularly, and include documentation that outlines your architecture, API endpoints, and integration patterns.
3. Provide sample code snippets for key functionalities, such as:
   - An endpoint that analyzes email content using OpenAI.
   - A module that calls Azure Quantum to generate quantum random numbers.
   - A UI component that displays scam alerts and filtering settings in an Apple-inspired, elegant layout.
4. Use Replit’s real-time collaboration and deployment features to iterate rapidly.

Please generate a complete project outline with relevant code examples, ensuring that the design remains luxurious, minimalist, and professional while effectively integrating all of the above features and technologies.